import os
from conan import ConanFile
from conan.tools.files import get, collect_libs
from conan.tools.cmake import CMakeToolchain, CMake, cmake_layout

class {{ clean_name }}Conan(ConanFile):
    name = "{{ name }}"
    version = {{ version }}
    settings = "os", "compiler", "build_type", "arch"

    def layout(self):
        cmake_layout(self)

    def source(self):
        get(self, url="{{ url }}",  sha256="{{ sha256 }}", strip_root=True)

    def generate(self):
        tc = CMakeToolchain(self)
{{~ for var in cmake_variables ~}}
    {{~ if var.key == 'linux' ~}}
        if self.settings.os == "Linux":
    {{~ end ~}}
    {{~ if var.key == 'windows' ~}}
        if self.settings.os == "Windows":
    {{~ end ~}}
    {{~ for v in var.value ~}}
        {{~ if var.key == 'any' ~}}
        tc.variables["{{ v.key }}"] = "{{ v.value }}"
        {{~ else ~}}
            tc.variables["{{ v.key }}"] = "{{ v.value }}"
        {{~ end ~}}  
    {{~ end ~}}
{{~ end ~}}
        tc.generate()

    def build(self):
        cmake = CMake(self)
        cmake.configure()
        cmake.build()

    def package(self):
        cmake = CMake(self)
        cmake.install()

    def package_info(self):
        self.cpp_info.libs = collect_libs(self)
